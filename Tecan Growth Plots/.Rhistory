delta_ct
delta_ct[-(97:108)]
delta_ct
delta_ct[-(97)]
delta_ct[-(108)]
delta_ct[-(109)]
delta_ct
delta_ct = as.vector(gene_test[,2] - endogenous_control[,2])
x = c("COG8_SAP30", "COG8_control", "REB1_SAP30", "REB1_control", "RET2_SAP30", "RET2_control", "control_SAP30", "control_control")
y = 1:96
for(i in 1:length(x)){
y[(i*3+94):(i*3+96)] = paste(x[i], "+ATC", sep = "")
y[(i*3+118):(i*3+120)] = paste(x[i], "-ATC", sep = "")
y[(i*3+142):(i*3+144)] = paste(x[i], "+ATC", sep = "")
y[(i*3+166):(i*3+168)] = paste(x[i], "-ATC", sep = "")
}
names(delta_ct) = y
z = delta_ct[97:192]
delta_ct
delta_ct[-(97)]
delta_ct = delta_ct[-97]
delta_ct
delta_ct = as.vector(gene_test[,2] - endogenous_control[,2])
x = c("COG8_SAP30", "COG8_control", "REB1_SAP30", "REB1_control", "RET2_SAP30", "RET2_control", "control_SAP30", "control_control")
y = 1:96
for(i in 1:length(x)){
y[(i*3+94):(i*3+96)] = paste(x[i], "+ATC", sep = "")
y[(i*3+118):(i*3+120)] = paste(x[i], "-ATC", sep = "")
y[(i*3+142):(i*3+144)] = paste(x[i], "+ATC", sep = "")
y[(i*3+166):(i*3+168)] = paste(x[i], "-ATC", sep = "")
}
names(delta_ct) = y
z = delta_ct[97:192]
delta_ct[97:108] = NA #first 12 values are -RT control (designed this way due to 0 RNA quant from nanodrop)
delta_ct
delta_ct = delta_ct[-(97:108)]
delta_ct
pdf(file = "SAP30 effect in ATC_2.pdf")
mean_matrix = matrix(NA, 2, 3)
colnames(mean_matrix) = c("RET2", "REB1", "COG8")
rownames(mean_matrix) = c("-SAP30","+SAP30")
sem_matrix = mean_matrix
n = delta_ct[which(names(delta_ct) == 'RET2_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'RET2_SAP30+ATC')]
mean_matrix[2,1] = mean(mean(n) - p + 1)
mean_matrix[1,1] = mean(mean(n) - n + 1)
sem_matrix[2,1] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,1] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'REB1_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'REB1_SAP30+ATC')]
mean_matrix[2,2] = mean(mean(n) - p + 1)
mean_matrix[1,2] = mean(mean(n) - n + 1)
sem_matrix[2,2] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,2] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'COG8_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'COG8_SAP30+ATC')]
mean_matrix[2,3] = mean(mean(n) - p + 1)
mean_matrix[1,3] = mean(mean(n) - n + 1)
sem_matrix[2,3] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,3] = sd(mean(n) - n + 1)/sqrt(6)
x = barplot(mean_matrix, main="with ATC",
ylab="Relative expression", col=c("white","grey"),
legend = rownames(mean_matrix), beside=TRUE, ylim = c(0,2.5))
segments(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix, lwd = 1.5)
arrows(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix,, lwd = 1.5, angle = 90,
code = 3, length = 0.05)
dev.off()
View(mean_matrix)
pdf(file = "SAP30 effect in ATC_2.pdf")
mean_matrix = matrix(NA, 2, 3)
colnames(mean_matrix) = c("RET2", "REB1", "COG8")
rownames(mean_matrix) = c("-SAP30","+SAP30")
sem_matrix = mean_matrix
n = delta_ct[which(names(delta_ct) == 'RET2_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'RET2_SAP30+ATC')]
mean_matrix[2,1] = mean(mean(n) - p + 1)
mean_matrix[1,1] = mean(mean(n) - n + 1)
sem_matrix[2,1] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,1] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'REB1_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'REB1_SAP30+ATC')]
mean_matrix[2,2] = mean(mean(n) - p + 1)
mean_matrix[1,2] = mean(mean(n) - n + 1)
sem_matrix[2,2] = sd(mean(n) - p + 1)/sqrt(3)
sem_matrix[1,2] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'COG8_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'COG8_SAP30+ATC')]
mean_matrix[2,3] = mean(mean(n) - p + 1)
mean_matrix[1,3] = mean(mean(n) - n + 1)
sem_matrix[2,3] = sd(mean(n) - p + 1)/sqrt(3)
sem_matrix[1,3] = sd(mean(n) - n + 1)/sqrt(6)
x = barplot(mean_matrix, main="with ATC",
ylab="Relative expression", col=c("white","grey"),
legend = rownames(mean_matrix), beside=TRUE, ylim = c(0,2.5))
segments(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix, lwd = 1.5)
arrows(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix,, lwd = 1.5, angle = 90,
code = 3, length = 0.05)
dev.off()
pdf(file = "SAP30 effect without ATC_2.pdf")
mean_matrix = matrix(NA, 2, 3)
colnames(mean_matrix) = c("RET2", "REB1", "COG8")
rownames(mean_matrix) = c("-SAP30","+SAP30")
sem_matrix = mean_matrix
n = delta_ct[which(names(delta_ct) == 'RET2_control-ATC')]
p = delta_ct[which(names(delta_ct) == 'RET2_SAP30-ATC')]
mean_matrix[2,1] = mean(mean(n) - p + 1)
mean_matrix[1,1] = mean(mean(n) - n + 1)
sem_matrix[2,1] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,1] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'REB1_control-ATC')]
p = delta_ct[which(names(delta_ct) == 'REB1_SAP30-ATC')]
mean_matrix[2,2] = mean(mean(n) - p + 1)
mean_matrix[1,2] = mean(mean(n) - n + 1)
sem_matrix[2,2] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,2] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'COG8_control-ATC')]
p = delta_ct[which(names(delta_ct) == 'COG8_SAP30-ATC')]
mean_matrix[2,3] = mean(mean(n) - p + 1)
mean_matrix[1,3] = mean(mean(n) - n + 1)
sem_matrix[2,3] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,3] = sd(mean(n) - n + 1)/sqrt(6)
x = barplot(mean_matrix, main="without ATC",
ylab="Relative expression", col=c("white","grey"),
legend = rownames(mean_matrix), beside=TRUE, ylim = c(0,2.5))
segments(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix, lwd = 1.5)
arrows(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix,, lwd = 1.5, angle = 90,
code = 3, length = 0.05)
dev.off()
pdf(file = "SAP30 effect without ATC_2.pdf")
mean_matrix = matrix(NA, 2, 3)
colnames(mean_matrix) = c("RET2", "REB1", "COG8")
rownames(mean_matrix) = c("-SAP30","+SAP30")
sem_matrix = mean_matrix
n = delta_ct[which(names(delta_ct) == 'RET2_control-ATC')]
p = delta_ct[which(names(delta_ct) == 'RET2_SAP30-ATC')]
mean_matrix[2,1] = mean(mean(n) - p + 1)
mean_matrix[1,1] = mean(mean(n) - n + 1)
sem_matrix[2,1] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,1] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'REB1_control-ATC')]
p = delta_ct[which(names(delta_ct) == 'REB1_SAP30-ATC')]
mean_matrix[2,2] = mean(mean(n) - p + 1)
mean_matrix[1,2] = mean(mean(n) - n + 1)
sem_matrix[2,2] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,2] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'COG8_control-ATC')]
p = delta_ct[which(names(delta_ct) == 'COG8_SAP30-ATC')]
mean_matrix[2,3] = mean(mean(n) - p + 1)
mean_matrix[1,3] = mean(mean(n) - n + 1)
sem_matrix[2,3] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,3] = sd(mean(n) - n + 1)/sqrt(6)
x = barplot(mean_matrix, main="without ATC",
ylab="Relative expression", col=c("white","grey"),
legend = rownames(mean_matrix), beside=TRUE, ylim = c(0,2.5))
segments(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix, lwd = 1.5)
arrows(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix,, lwd = 1.5, angle = 90,
code = 3, length = 0.05)
dev.off()
#Make a barplot comparing +/- ATC (no SAP30)
pdf(file = "ATC effect without SAP30 guide_2.pdf")
mean_matrix = matrix(NA, 2, 3)
colnames(mean_matrix) = c("RET2", "REB1", "COG8")
rownames(mean_matrix) = c("+ATC","-ATC")
sem_matrix = mean_matrix
n = delta_ct[which(names(delta_ct) == 'RET2_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'RET2_control-ATC')]
mean_matrix[2,1] = mean(mean(n) - p + 1)
mean_matrix[1,1] = mean(mean(n) - n + 1)
sem_matrix[2,1] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,1] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'REB1_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'REB1_control-ATC')]
mean_matrix[2,2] = mean(mean(n) - p + 1)
mean_matrix[1,2] = mean(mean(n) - n + 1)
sem_matrix[2,2] = sd(mean(n) - p + 1)/sqrt(3)
sem_matrix[1,2] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'COG8_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'COG8_control-ATC')]
mean_matrix[2,3] = mean(mean(n) - p + 1)
mean_matrix[1,3] = mean(mean(n) - n + 1)
sem_matrix[2,3] = sd(mean(n) - p + 1)/sqrt(3)
sem_matrix[1,3] = sd(mean(n) - n + 1)/sqrt(6)
x = barplot(mean_matrix, main="No SAP30 guide",
ylab="Relative expression", col=c("white","grey"),
legend = rownames(mean_matrix), beside=TRUE, ylim = c(0,4))
segments(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix, lwd = 1.5)
arrows(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix, lwd = 1.5, angle = 90,
code = 3, length = 0.05)
dev.off()
#Make a barplot comparing +/- ATC (w/ SAP30 guide)
pdf(file = "ATC effect with SAP30 guide_2.pdf")
mean_matrix = matrix(NA, 2, 3)
colnames(mean_matrix) = c("RET2", "REB1", "COG8")
rownames(mean_matrix) = c("+ATC","-ATC")
sem_matrix = mean_matrix
n = delta_ct[which(names(delta_ct) == 'RET2_SAP30+ATC')]
p = delta_ct[which(names(delta_ct) == 'RET2_SAP30-ATC')]
mean_matrix[2,1] = mean(mean(n) - p + 1)
mean_matrix[1,1] = mean(mean(n) - n + 1)
sem_matrix[2,1] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,1] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'REB1_SAP30+ATC')]
p = delta_ct[which(names(delta_ct) == 'REB1_SAP30-ATC')]
mean_matrix[2,2] = mean(mean(n) - p + 1)
mean_matrix[1,2] = mean(mean(n) - n + 1)
sem_matrix[2,2] = sd(mean(n) - p + 1)/sqrt(3)
sem_matrix[1,2] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'COG8_SAP30+ATC')]
p = delta_ct[which(names(delta_ct) == 'COG8_SAP30-ATC')]
mean_matrix[2,3] = mean(mean(n) - p + 1)
mean_matrix[1,3] = mean(mean(n) - n + 1)
sem_matrix[2,3] = sd(mean(n) - p + 1)/sqrt(3)
sem_matrix[1,3] = sd(mean(n) - n + 1)/sqrt(6)
x = barplot(mean_matrix, main="With SAP30 guide",
ylab="Relative expression", col=c("white","grey"),
legend = rownames(mean_matrix), beside=TRUE, ylim = c(0,4))
segments(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix, lwd = 1.5)
arrows(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix, lwd = 1.5, angle = 90,
code = 3, length = 0.05)
dev.off()
n = delta_ct[which(names(delta_ct) == 'REB1_SAP30+ATC')]
n
require("readxl")
#goal: analyze qPCR results - plot
getwd()
setwd("/Users/adam/Documents/Levy Lab/Projects/Mia's double CRISPRi screening review/qPCR results")
#setwd("/Users/adam/Documents/Levy Lab/Projects/Mia's double CRISPRi screening review/qPCR results")
#Import qPCR Amplification Data (txt file)
Amp_Data_Ct = read.table("Tecan_Mia_qPCR_RQmanager_2.sdm-Amplification Data_2.txt",
skip = 4,
header = TRUE,
sep = "\t",
fill = TRUE)
#Delete unnecessary columns
Amp_Data_Ct = Amp_Data_Ct[,-c(1,2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26)]
#split matrix (gene test & endogenous control)
gene_test = Amp_Data_Ct[seq(1,nrow(Amp_Data_Ct), by = 2),]
endogenous_control = Amp_Data_Ct[seq(2,nrow(Amp_Data_Ct), by = 2),]
#calculate delta Ct
delta_ct = as.vector(gene_test[,2] - endogenous_control[,2])
x = c("COG1_SAP30", "COG1_control", "REB1_SAP30", "REB1_control", "RET2_SAP30", "RET2_control", "control_SAP30", "control_control")
y = 1:96
for(i in 1:length(x)){
y[(i*3-2):(i*3)] = paste(x[i], "+ATC", sep = "")
y[(i*3+22):(i*3+24)] = paste(x[i], "-ATC", sep = "")
y[(i*3+46):(i*3+48)] = paste(x[i], "+ATC", sep = "")
y[(i*3+70):(i*3+72)] = paste(x[i], "-ATC", sep = "")
}
names(delta_ct) = y
z = delta_ct[1:96]
#CAUTION: control_control and control_SAP30 use different primers
mean_delta_ct = 1:16
names(mean_delta_ct) = c(paste(x, "+ATC", sep = ""), paste(x, "-ATC", sep = ""))
for(i in 1:length(mean_delta_ct)){
mean_delta_ct[i] = mean(delta_ct[c((i*3-2):(i*3), (i*3+46):(i*3+48))])
}
delta_delta_ct = mean_delta_ct[1:8] - mean_delta_ct[9:16]
names(delta_delta_ct) = x
#test
for(i in 1){
yyy = delta_ct[(i*3-2):(i*3) + (i*3+46):(i*3+48)]
}
par(mar = c(5, 10, 4, 2) + 0.1)
i = 1
plot( delta_ct[c((i*3-2):(i*3), (i*3+46):(i*3+48))], c(i,i,i,i,i,i), ylim = c(0,16), xlim = c(-2, 3), ylab = "", yaxt = 'n', xlab = "deltaCt")
for(i in 2:16){
points(delta_ct[c((i*3-2):(i*3), (i*3+46):(i*3+48))], c(i,i,i,i,i,i))
}
axis(2, at = 1:16, labels = names(mean_delta_ct), las = 2)
#controls +ATC
cc_cog = delta_ct[22]
cc_reb = delta_ct[23:24]
cc_ret = delta_ct[70]
#Make a barplot comparing +/- SAP30 in +ATC
pdf(file = "SAP30 effect in ATC.pdf")
mean_matrix = matrix(NA, 2, 3)
colnames(mean_matrix) = c("RET2", "REB1", "COG1")
rownames(mean_matrix) = c("-SAP30","+SAP30")
sem_matrix = mean_matrix
n = delta_ct[which(names(delta_ct) == 'RET2_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'RET2_SAP30+ATC')]
mean_matrix[2,1] = mean(mean(n) - p + 1)
mean_matrix[1,1] = mean(mean(n) - n + 1)
sem_matrix[2,1] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,1] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'REB1_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'REB1_SAP30+ATC')]
mean_matrix[2,2] = mean(mean(n) - p + 1)
mean_matrix[1,2] = mean(mean(n) - n + 1)
sem_matrix[2,2] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,2] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'COG1_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'COG1_SAP30+ATC')]
mean_matrix[2,3] = mean(mean(n) - p + 1)
mean_matrix[1,3] = mean(mean(n) - n + 1)
sem_matrix[2,3] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,3] = sd(mean(n) - n + 1)/sqrt(6)
x = barplot(mean_matrix, main="with ATC",
ylab="Relative expression", col=c("white","grey"),
legend = rownames(mean_matrix), beside=TRUE, ylim = c(0,2.5))
segments(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix, lwd = 1.5)
arrows(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix,, lwd = 1.5, angle = 90,
code = 3, length = 0.05)
dev.off()
#Make a barplot comparing +/- SAP30 in -ATC
pdf(file = "SAP30 effect without ATC.pdf")
mean_matrix = matrix(NA, 2, 3)
colnames(mean_matrix) = c("RET2", "REB1", "COG1")
rownames(mean_matrix) = c("-SAP30","+SAP30")
sem_matrix = mean_matrix
n = delta_ct[which(names(delta_ct) == 'RET2_control-ATC')]
p = delta_ct[which(names(delta_ct) == 'RET2_SAP30-ATC')]
mean_matrix[2,1] = mean(mean(n) - p + 1)
mean_matrix[1,1] = mean(mean(n) - n + 1)
sem_matrix[2,1] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,1] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'REB1_control-ATC')]
p = delta_ct[which(names(delta_ct) == 'REB1_SAP30-ATC')]
mean_matrix[2,2] = mean(mean(n) - p + 1)
mean_matrix[1,2] = mean(mean(n) - n + 1)
sem_matrix[2,2] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,2] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'COG1_control-ATC')]
p = delta_ct[which(names(delta_ct) == 'COG1_SAP30-ATC')]
mean_matrix[2,3] = mean(mean(n) - p + 1)
mean_matrix[1,3] = mean(mean(n) - n + 1)
sem_matrix[2,3] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,3] = sd(mean(n) - n + 1)/sqrt(6)
x = barplot(mean_matrix, main="without ATC",
ylab="Relative expression", col=c("white","grey"),
legend = rownames(mean_matrix), beside=TRUE, ylim = c(0,2.5))
segments(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix, lwd = 1.5)
arrows(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix,, lwd = 1.5, angle = 90,
code = 3, length = 0.05)
dev.off()
#Make a barplot comparing +/- ATC (no SAP30)
pdf(file = "ATC effect without SAP30 guide.pdf")
mean_matrix = matrix(NA, 2, 3)
colnames(mean_matrix) = c("RET2", "REB1", "COG1")
rownames(mean_matrix) = c("+ATC","-ATC")
sem_matrix = mean_matrix
n = delta_ct[which(names(delta_ct) == 'RET2_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'RET2_control-ATC')]
mean_matrix[2,1] = mean(mean(n) - p + 1)
mean_matrix[1,1] = mean(mean(n) - n + 1)
sem_matrix[2,1] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,1] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'REB1_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'REB1_control-ATC')]
mean_matrix[2,2] = mean(mean(n) - p + 1)
mean_matrix[1,2] = mean(mean(n) - n + 1)
sem_matrix[2,2] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,2] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'COG1_control+ATC')]
p = delta_ct[which(names(delta_ct) == 'COG1_control-ATC')]
mean_matrix[2,3] = mean(mean(n) - p + 1)
mean_matrix[1,3] = mean(mean(n) - n + 1)
sem_matrix[2,3] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,3] = sd(mean(n) - n + 1)/sqrt(6)
x = barplot(mean_matrix, main="No SAP30 guide",
ylab="Relative expression", col=c("white","grey"),
legend = rownames(mean_matrix), beside=TRUE, ylim = c(0,4))
segments(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix, lwd = 1.5)
arrows(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix, lwd = 1.5, angle = 90,
code = 3, length = 0.05)
dev.off()
#Make a barplot comparing +/- ATC (w/ SAP30 guide)
pdf(file = "ATC effect with SAP30 guide.pdf")
mean_matrix = matrix(NA, 2, 3)
colnames(mean_matrix) = c("RET2", "REB1", "COG1")
rownames(mean_matrix) = c("+ATC","-ATC")
sem_matrix = mean_matrix
n = delta_ct[which(names(delta_ct) == 'RET2_SAP30+ATC')]
p = delta_ct[which(names(delta_ct) == 'RET2_SAP30-ATC')]
mean_matrix[2,1] = mean(mean(n) - p + 1)
mean_matrix[1,1] = mean(mean(n) - n + 1)
sem_matrix[2,1] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,1] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'REB1_SAP30+ATC')]
p = delta_ct[which(names(delta_ct) == 'REB1_SAP30-ATC')]
mean_matrix[2,2] = mean(mean(n) - p + 1)
mean_matrix[1,2] = mean(mean(n) - n + 1)
sem_matrix[2,2] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,2] = sd(mean(n) - n + 1)/sqrt(6)
n = delta_ct[which(names(delta_ct) == 'COG1_SAP30+ATC')]
p = delta_ct[which(names(delta_ct) == 'COG1_SAP30-ATC')]
mean_matrix[2,3] = mean(mean(n) - p + 1)
mean_matrix[1,3] = mean(mean(n) - n + 1)
sem_matrix[2,3] = sd(mean(n) - p + 1)/sqrt(6)
sem_matrix[1,3] = sd(mean(n) - n + 1)/sqrt(6)
x = barplot(mean_matrix, main="With SAP30 guide",
ylab="Relative expression", col=c("white","grey"),
legend = rownames(mean_matrix), beside=TRUE, ylim = c(0,4))
segments(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix, lwd = 1.5)
arrows(x, mean_matrix - sem_matrix, x,
mean_matrix + sem_matrix, lwd = 1.5, angle = 90,
code = 3, length = 0.05)
dev.off()
#Libraries
require(pracma)
#Set working directory
setwd("/Users/adam/Documents/GitHub/Tecan-Analysis/")
getwd()
#Import well IDs
well.id.file = "SAP30_ananalysis_Plate1_Well_IDs.txt"
x = as.matrix(read.csv(well.id.file, header = F, strip.white = T))
ids = x[2,]
#Import Tecan Data
tecan.file = "2018-07-27_17-32_20180727_Mia_Tecan_SC-URA_7.1_96_T2.txt"
x = read.csv(tecan.file, skip = 19)
x = x[1:(nrow(x) - 2), ]
#Matix of ODs
od = as.matrix(x[,3:ncol(x)])
#Vector of temperatures
temp = x[,2]
#Vector of Times (s)
y = as.vector(x[,1])
z = strsplit(y, "\t")
time = 1:length(z)
for(i in 1:length(time)){
time[i] = as.numeric(z[[i]][2])
}
#Find the area under the curve
auc = 1:ncol(od)
for(i in 1:ncol(od)){
auc[i] = trapz(time, od[,i])
}
#Compare
cog1_sap30_P = c(1:3, 49:51)
cog1_neg_P = c(4:6, 52:54)
reb1_sap30_P = c(7:9, 55:57)
reb1_neg_P = c(10:12, 58:60)
ret2_sap30_P = c(13:15, 61:63)
ret2_neg_P = c(16:18, 64:66)
neg_sap30_P = cog1_sap30_P + 18
neg_neg_P = cog1_sap30_P + 21
cog1_sap30_N = c(25:27, 73:75)
cog1_neg_N = cog1_sap30_N + 3
reb1_sap30_N = cog1_sap30_N + 6
reb1_neg_N = cog1_sap30_N + 9
ret2_sap30_N = cog1_sap30_N + 12
ret2_neg_N = cog1_sap30_N + 15
neg_sap30_N = cog1_sap30_N + 18
neg_neg_N = cog1_sap30_N + 21
condition = c("cog1_sap30_P", "cog1_neg_P", "reb1_sap30_P", "reb1_neg_P", "ret2_sap30_P", "ret2_neg_P", "neg_sap30_P", "neg_neg_P", "cog1_sap30_N", "cog1_neg_N", "reb1_sap30_N", "reb1_neg_N", "ret2_sap30_N", "ret2_neg_N", "neg_sap30_N", "neg_neg_N" )
#plot
#setwd to save plots in separate folder
setwd("/Users/adam/Documents/GitHub/Tecan-Analysis/Tecan Growth Plots/")
#General
pdf(file = "P7.1_Rep.pdf", width = 14, height = 14)
par(mfrow = c(4,4))
for(j in 1:length(condition)){
x = eval(parse(text = condition[j]))
plot(time/60, od[,x[1]], type = "l" , xlab = "Time (minutes)", ylab = "OD595", main = condition[j], ylim = c(0,0.6))
for(i in 2:length(x)){
points(time/60, od[,x[i]], type = "l")
}
}
dev.off()
#+ATC vs -ATC
pdf(file = "P7.1_ATC.pdf", width = 16, height = 8)
par(mfrow = c(2,4))
for(j in 1:(length(condition)/2)){
x = eval(parse(text = condition[j]))
plot(time/60, od[,x[1]], type = "l" , xlab = "Time (minutes)", ylab = "OD595",  ylim = c(0,0.6))
for(i in 2:length(x)){
points(time/60, od[,x[i]], type = "l")
}
x = eval(parse(text = condition[j+8]))
for(i in 1:length(x)){
points(time/60, od[,x[i]], type = "l", col = "red")
}
text(400, 0.6, labels = condition[j])
text(400, 0.55, labels = condition[j+8], col = "red")
}
dev.off()
#+/-SAP30
pdf(file = "P7.1_SAP30.pdf", width = 16, height = 8)
par(mfrow = c(2,4))
for(j in (1:8)*2 -1){
x = eval(parse(text = condition[j]))
plot(time/60, od[,x[1]], type = "l" , xlab = "Time (minutes)", ylab = "OD595", ylim = c(0,0.6))
for(i in 2:length(x)){
points(time/60, od[,x[i]], type = "l")
}
x = eval(parse(text = condition[j+1]))
for(i in 1:length(x)){
points(time/60, od[,x[i]], type = "l", col = "red")
}
text(400, 0.6, labels = condition[j])
text(400, 0.55, labels = condition[j+1], col = "red")
}
dev.off()
