require("readxl")
#goal: analyze qPCR results - plot
getwd()
#setwd("/Users/adam/Documents/Levy Lab/Projects/Mia's double CRISPRi screening review/qPCR results")
setwd("~/OneDrive - Leland Stanford Junior University/Github/Tecan-Analysis/qPCR analysis 2/")
#Import qPCR Amplification Data (txt file)
Amp_Data_Ct = read.table("Tecan_Mia_qPCR_RQmanager_1.sdm-Amplification Data_2.txt",
skip = 4,
header = TRUE,
sep = "\t",
fill = TRUE)
Amp_Data_Ct
Amp_Data_Ct = Amp_Data_Ct[,-c(1,2,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26)]
Amp_Data_Ct
gene_test = Amp_Data_Ct[seq(1,nrow(Amp_Data_Ct), by = 2),]
endogenous_control = Amp_Data_Ct[seq(2,nrow(Amp_Data_Ct), by = 2),]
gene_test
endogenous_control
delta_ct = gene_test[,2] - endogenous_control[,2]
delta_ct
delta_ct = matrix(NA,48,1)
for (i in 1:nrow(gene_test)){
delta_ct[i,] = gene_test[i,2] - endogenous_control[i,2]
}
delta_ct
x = c("COG8_SAP30", "COG8_control", "REB1_SAP30", "REB1_control", "RET2_SAP30", "RET2_control", "control_SAP30", "control_control")
y = 1:48
for(i in 1:length(x)){
y[(i*3-2):(i*3)] = paste(x, _"+ATC", sep = "")
y[(i*3+22):(i*3+24)] = paste(x, _"-ATC", sep = "")
}
y = 1:48
for(i in 1:length(x)){
y[(i*3-2):(i*3)] = paste(x, "+ATC", sep = "")
y[(i*3+22):(i*3+24)] = paste(x, "-ATC", sep = "")
}
y
y = 1:48
for(i in 1:length(x)){
y[(i*3-2):(i*3)] = paste(x[i], "+ATC", sep = "")
y[(i*3+22):(i*3+24)] = paste(x[i], "-ATC", sep = "")
}
y
names(delta_ct) = y
delta_ct
delta_ct = as.vector(gene_test[,2] - endogenous_control[,2])
names(delta_ct) = y
delta_ct
paste(paste(x, "+ATC", sep = ""), paste(x, "-ATC", sep = ""), sep = "")
names(mean_ct) = c(paste(x, "+ATC", sep = ""), paste(x, "-ATC", sep = ""))
c(paste(x, "+ATC", sep = ""), paste(x, "-ATC", sep = ""))
mean_delta_ct = 1:16
names(mean_delta_ct) = c(paste(x, "+ATC", sep = ""), paste(x, "-ATC", sep = ""))
for(i in 1:length(x)){
mean_delta_ct[i] = mean(y[(i*3-2):(i*3)])
}
mean(y[(i*3-2):(i*3)])
i
y
mean_delta_ct = 1:16
names(mean_delta_ct) = c(paste(x, "+ATC", sep = ""), paste(x, "-ATC", sep = ""))
for(i in 1:length(mean_delta_ct)){
mean_delta_ct[i] = mean(delta_ct[(i*3-2):(i*3)])
}
mean_delta_ct
?ones
plot(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16))
i = 1
plot(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16))
max(delta_ct)
min(delta_ct)
plot(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = (-1, 5))
plot(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = (-1, 5)))
plot(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5))
for(i in 2:16){
points(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5))
}
i = 1
plot(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5), xlab = NULL)
for(i in 2:16){
points(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5))
}
?par
i = 1
plot(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5), xaxt = NULL)
for(i in 2:16){
points(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5))
}
plot(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5), xlab = "", xaxt = NULL)
i = 1
plot(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5), xlab = "", xaxt = NULL)
for(i in 2:16){
points(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5))
}
plot(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5), xlab = "", xaxt = NULL, ylab = "deltaCt")
for(i in 2:16){
points(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5))
}
plot(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5), xlab = "", xaxt = 'n', ylab = "deltaCt")
axis(1, at = 1:16, labels = names(mean_delta_ct), las = 2)
i = 1
plot(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5), xlab = "", xaxt = 'n', ylab = "deltaCt")
for(i in 2:16){
points(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5))
}
axis(1, at = 1:16, labels = names(mean_delta_ct), las = 2)
i = 1
plot(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5), xlab = "", xaxt = 'n', ylab = "deltaCt", mar = c(10, 4, 4, 2) + 0.1)
for(i in 2:16){
points(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5))
}
axis(1, at = 1:16, labels = names(mean_delta_ct), las = 2)
par(mar = c(10, 4, 4, 2) + 0.1)
i = 1
plot(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5), xlab = "", xaxt = 'n', ylab = "deltaCt")
for(i in 2:16){
points(c(i,i,i), delta_ct[(i*3-2):(i*3)], xlim = c(0,16), ylim = c(-1, 5))
}
axis(1, at = 1:16, labels = names(mean_delta_ct), las = 2)
mean_delta_ct = 1:16
names(mean_delta_ct) = c(paste(x, "+ATC", sep = ""), paste(x, "-ATC", sep = ""))
for(i in 1:length(mean_delta_ct)){
mean_delta_ct[i] = mean(delta_ct[(i*3-2):(i*3)])
}
mean_delta_ct
mean_delta_ct[1:8] - mean_delta_ct[9:16]
delta_delta_ct = mean_delta_ct[1:8] - mean_delta_ct[9:16]
names(delta_delta_ct) = x
delta_delta_ct
Amp_Data_Ct
Amp_Data_Ct = read.table("Tecan_Mia_qPCR_RQmanager_1.sdm-Amplification Data_2.txt",
skip = 4,
header = TRUE,
sep = "\t",
fill = TRUE)
gene_test
endogenous_control
